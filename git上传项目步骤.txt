---------------------------将完整项目上传到GitHub上---------------------------
1、进入需要上传项目的目录中，打开Git Bash

2、通过命令git init把这个文件夹变成Git可管理的仓库

3、通过命令git status 来查看当前项目的状态

4、然后通过git add把项目添加到仓库（或git add .把该目录下的所有文件添加到仓库，注意点是用空格隔开的）

5、这个过程中你其实可以一直使用git status来查看你当前的状态。

6、用git commit -m " 想要注释的内容"  把项目提交到仓库。

7、在Github上创建一个Git仓库。

8、复制仓库的地址

9、通过git remote add origin https://github.com/NoviceZHB/ProductSSM3.git 与GitHub上的仓库进行关联

10、通过git push -u origin master将仓库中的项目提交到GitHub仓库中

---由于新建的远程仓库是空的，所以要加上-u这个参数，等远程仓库里面有了内容之后，
	下次再从本地库上传内容的时候只需下面这样就可以了：
			git push origin master

注意:另外，这里有个坑需要注意一下，就是在上面第七步创建远程仓库的时候，如果你勾选了Initialize this repository with a README（就是创建仓库的时候自动给你创建一个README文件），那么到了第九步你将本地仓库内容推送到远程仓库的时候就会报一个failed to push some refs to  https://github.com/NoviceZHB/ProductSSM3.git的错。

 这是由于你新创建的那个仓库里面的README文件不在本地仓库目录中，这时我们可以通过以下命令先将内容合并以下：
	git pull --rebase origin master


---------------------------将项目中修改后的文件上传到GitHub上---------------------------

1、通过git status 查看项目中被修改的文件

2、将修改过的文件通过git add -u 添加到索引库

3、再次检测git status

4、将修改后的文件从暂存区提交到本地版本库 git commit -m "备注：XXX文件被修改"

5、通过 git pull 从远程获取最新版本并合并到本地

6、将本地版本库的分支推送到远程服务器上对应的分支（git push）




























